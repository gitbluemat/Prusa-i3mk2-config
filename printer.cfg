# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

# See docs/Config_Reference.md for a description of parameters.

#MAINSAIL START
[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes
#MAINSAIL END

#[display]
#lcd_type: ssd1306
#i2c_mcu: rpi
#i2c_bus: i2c.1
#i2c_speed: 400000
#i2c_software_scl_pin: rpi: gpio9
#i2c_software_sda_pin: rpi: gpio8
#menu_timeout: 30
#encoder_pins: ^!rpi: gpio21, ^!rpi: gpio20
#click_pin: ^rpi: gpio16

#STEPPER MOTORS CONFIG
[stepper_x]
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
microsteps: 16
rotation_distance: 39.5
endstop_pin: tmc2209_stepper_x:virtual_endstop #^!gpio4
position_endstop: -31
position_max: 220
position_min: -31
homing_speed: 25

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.500
hold_current: 0.200
stealthchop_threshold: 999999
diag_pin: gpio4
driver_SGTHRS: 20

[stepper_y]
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
microsteps: 16
rotation_distance: 39.5
endstop_pin: tmc2209_stepper_y:virtual_endstop #^!gpio3
position_min: -50
position_endstop: -19
position_max: 180
homing_speed: 10

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.500
hold_current: 0.200
stealthchop_threshold: 999999
diag_pin: gpio3
driver_SGTHRS: 15

[stepper_z]
homing_speed: 5.0
step_pin: gpio19
dir_pin: gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 8 #default 1.25
#for bl touch
endstop_pin: probe:z_virtual_endstop
#for normal endstop
#endstop_pin: ^!gpio25
#position_endstop: 0.0
position_max: 2000
position_min: -3

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.700
hold_current: 0.500
stealthchop_threshold: 999999
#diag_pin: gpio25
#driver_SGTHRS: 20

[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
microsteps: 16
rotation_distance: 25 #24.5 from calibrated extruder
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: gpio23
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio27
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250
max_extrude_cross_section: 0.752

#min_extrude_temp: 0
#max_extrude_only_distance: 200

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 1.200
hold_current: 0.500
stealthchop_threshold: 999999
#STEPER MOTOR CONFIG END

#HEAT COMPONENTS START
[heater_bed]
heater_pin: gpio21
sensor_type: ATC Semitec 104GT-2
sensor_pin: gpio26
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin:gpio20

[heater_fan heatbreak_cooling_fan]
pin: gpio18

#[heater_fan controller_fan]
#pin: gpio17

#[temperature_sensor pico]
#sensor_type: temperature_mcu

[temperature_fan controller] 
pin: gpio17
control: watermark 
max_delta: 3.0 
sensor_type: temperature_mcu 
sensor_mcu: mcu 
min_temp: 0 
max_temp: 85.0 
target_temp: 40.0 
max_power: 1 #for 100% 
shutdown_speed: 1.0


#HARWARE SETUP START
[mcu]
serial: /dev/ttyAMA0
restart_method=command

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 2000
max_z_velocity: 5
max_z_accel: 32

[neopixel board_neopixel]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3
#HARDWARE SETUP END


#MACROS START
[gcode_macro BED]
gcode:
    M140 S{bed_temperature} ; Set bed temperature to {bed_temperature}°C

[gcode_macro TEST_HOTEND]
gcode:
    M104 S200 ; Set hotend temperature to 200°C

[gcode_macro START_PRINT] 
gcode: 
    M221 S70
    M117 przygotowanie do drukowania    
    M106 S102 ; Set fan speed to 40%
    # Use absolute coordinates 
    G90 
    # Home the printer 
    G28 
    # Reset extruder 
    G92 E0

    #go to start position
    G1 X14 Y5 Z2
    

    #turn on fan
    M106 S191
    # Move Z axis up 
    G1 Z2.0 F3000 
    # Move to start position 
    G1 X14 Y0 Z2 F5000.0 
    # Draw the first line
    G1 X14 Y191.0 Z0.28 F1500.0 E15 
    # Move to the side
    G1 X14 Y191.0 Z0.28 F5000.0 
    # Draw the second line 
    G1 X14 Y0 Z0.28 F1500.0 E30 
    #move z axis up
    G1 Z+10
    # Reset extruder 
    G92 E0
    M117 zacznij druk 
    

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    #Go away with y and z
    G1 X0 Y180 Z+25
    # Disable steppers
    M84
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}



  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}



  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#MACROS END

[bltouch]
sensor_pin: ^gpio22
control_pin: gpio29
pin_up_touch_mode_reports_triggered: false
y_offset: -28
z_offset: 0.718

[safe_z_home]
home_xy_position: 100,100
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 50
horizontal_move_z: 5
mesh_min: 10,40 #42,30
mesh_max: 180,150 #207,180
probe_count: 6
algorithm: bicubic
fade_start: 0
fade_end: 0
fade_target: 0

#[filament_switch_sensor runout_sensor]
#switch_pin: ^gpio16

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#z_offset = 0.600

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.000

#     M117 wlaczanie grzalek
#    # Start heating bed and hotend simultaneously
#    M140 S{print_bed_temperature}
#    M104 S{print_temperature}
#
#    M117 czekanie na grzalki
# Wait for both bed and hotend to reach target temperatures
#    M190 S{print_bed_temperature}
#    M109 S{print_temperature}
#    M117 zacznij druk

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.200

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
[bed_mesh szklo1]
version = 1
points =
    -0.047500, 0.007500, 0.012500, 0.007500, -0.067500, -0.100000
    0.015000, 0.077500, 0.080000, 0.017500, -0.010000, -0.080000
    0.005000, 0.055000, 0.075000, 0.060000, 0.025000, -0.025000
    -0.002500, 0.070000, 0.102500, 0.047500, 0.040000, 0.007500
    -0.005000, 0.075000, 0.107500, 0.095000, 0.070000, 0.060000
    0.005000, 0.082500, 0.127500, 0.102500, 0.107500, 0.082500
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 0.0
max_x = 180.0
min_y = 40.0
max_y = 150.0

